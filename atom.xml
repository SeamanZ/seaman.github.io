<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zane-Inspiration</title>
  
  <subtitle>爱生活，爱学习。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://Zane-Inspiration.github.io/"/>
  <updated>2020-09-22T14:47:42.387Z</updated>
  <id>https://Zane-Inspiration.github.io/</id>
  
  <author>
    <name>Zane</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RecyclerView 网格列表项分割线算法</title>
    <link href="https://Zane-Inspiration.github.io/2020/09/21/RecyclerView%E7%BD%91%E6%A0%BC%E5%88%97%E8%A1%A8%E9%A1%B9%E5%88%86%E5%89%B2%E7%BA%BF%E7%AE%97%E6%B3%95/"/>
    <id>https://Zane-Inspiration.github.io/2020/09/21/RecyclerView网格列表项分割线算法/</id>
    <published>2020-09-21T13:00:28.000Z</published>
    <updated>2020-09-22T14:47:42.387Z</updated>
    
    <content type="html"><![CDATA[<p>在电商应用中，网格布局是经常用到的，比如相册的选择器的图片预览列表或者瀑布流形式的商品卡片列表。</p><p>在Android中要实现这些功能，现在的做法是使用RecyclerView展示数据然后设置GridLayoutManager或者StaggeredGridLayoutManager去实现不同的列表项排列方式。接下来是列表项之间的间距问题了，这个涉及到到 RecyclerView 的内部类RecyclerView.ItemDecoration。要定制自己希望的间距，得实现一个ItemDecoration的子类，重写 getItemOffsets 方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> @Override</span><br><span class="line">    public void getItemOffsets(@NonNull Rect outRect,</span><br><span class="line">                               @NonNull View view,</span><br><span class="line">                               @NonNull RecyclerView parent,</span><br><span class="line">                               @NonNull RecyclerView.State state) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上样列代码中，第一个参数Rect的left,top,right,bottom属性分别表示列表项的左上右下四个边的外边距。两个列表项之间的间距是由它们设置的Rect的相邻的两边的属性相加之和。比如分割线宽度是8的两列表的列表，简单的实现代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public void getItemOffsets(Rect outRect, View view, RecyclerView parent,</span><br><span class="line">                           RecyclerView.State state) &#123;</span><br><span class="line">    super.getItemOffsets(outRect, view, parent, state);</span><br><span class="line">    int spanCount = 0; //总列数</span><br><span class="line">    int index = 0;  //item在瀑布流里面是第几列</span><br><span class="line">    int position = parent.getChildAdapterPosition(view); //位置</span><br><span class="line">  </span><br><span class="line">    if (parent.getLayoutManager() instanceof GridLayoutManager) &#123;</span><br><span class="line">        GridLayoutManager.LayoutParams lp = (GridLayoutManager.LayoutParams) view.getLayoutParams();</span><br><span class="line">        index = lp.getSpanIndex();</span><br><span class="line">        spanCount = ((GridLayoutManager) parent.getLayoutManager()).getSpanCount();</span><br><span class="line"></span><br><span class="line">    &#125; else if (parent.getLayoutManager() instanceof StaggeredGridLayoutManager) &#123;</span><br><span class="line">        StaggeredGridLayoutManager.LayoutParams lp = (StaggeredGridLayoutManager.LayoutParams) view.getLayoutParams();</span><br><span class="line">        index = lp.getSpanIndex();</span><br><span class="line">        spanCount = ((StaggeredGridLayoutManager) parent.getLayoutManager()).getSpanCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (index == 0) &#123; //第一列</span><br><span class="line">        outRect.left = mSpace;</span><br><span class="line">        outRect.right = mSpaceMiddle;</span><br><span class="line">    &#125; else if (index == spanCount - 1) &#123; //最后一列</span><br><span class="line">        outRect.left = mSpace/2;</span><br><span class="line">        outRect.right = mSpace;</span><br><span class="line">    &#125; else &#123; //非首尾列</span><br><span class="line">        outRect.left = mSpace/2;</span><br><span class="line">        outRect.right = mSpace/2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //第一行顶部</span><br><span class="line">    if (position &lt; spanCount ) &#123;</span><br><span class="line">        outRect.top = mSpace;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //结束行底部</span><br><span class="line">     outRect.bottom = mSpace;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过代码算法有局限性，如果列表列数大于2，则列表显示的样式则不如预期，原因是 RecyclerView 显示列表项的时候，不是先把分割线占的宽度去掉再把剩下的宽度平分给每一列，而是反过先按要显示的列数平分然后再去除我们设置的列表项外边距，最终才是列表项的最终显示宽度。RecyclerView 的这个特性，使得在做多种宽度的设备屏幕做适配的时候显得很麻烦。如果没有好的算法，一般只能以固定列数显示列表项，不管当前显示的屏幕宽度有多大。这个体验其实不是不好的。</p><p>带着这个问题，在网上Google了一翻，基本没找到理想的算法，不过最终在 <a href="https://stackoverflow.com/questions/28531996/android-recyclerview-gridlayoutmanager-column-spacing/28533234" target="_blank" rel="noopener">gridview - Android Recyclerview GridLayoutManager column spacing - Stack Overflow</a> 找到了一个解决方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">public class GridSpacingItemDecoration extends RecyclerView.ItemDecoration &#123;</span><br><span class="line"></span><br><span class="line">private int spanCount;</span><br><span class="line">private int spacing;</span><br><span class="line">private boolean includeEdge;</span><br><span class="line"></span><br><span class="line">public GridSpacingItemDecoration(int spanCount, int spacing, boolean includeEdge) &#123;</span><br><span class="line">    this.spanCount = spanCount;</span><br><span class="line">    this.spacing = spacing;</span><br><span class="line">    this.includeEdge = includeEdge;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) &#123;</span><br><span class="line">    int position = parent.getChildAdapterPosition(view); // item position</span><br><span class="line">    int column = position % spanCount; // item column</span><br><span class="line"></span><br><span class="line">    if (includeEdge) &#123;</span><br><span class="line">        outRect.left = spacing - column * spacing / spanCount; // spacing - column * ((1f / spanCount) * spacing)</span><br><span class="line">        outRect.right = (column + 1) * spacing / spanCount; // (column + 1) * ((1f / spanCount) * spacing)</span><br><span class="line"></span><br><span class="line">        if (position &lt; spanCount) &#123; // top edge</span><br><span class="line">            outRect.top = spacing;</span><br><span class="line">        &#125;</span><br><span class="line">        outRect.bottom = spacing; // item bottom</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        outRect.left = column * spacing / spanCount; // column * ((1f / spanCount) * spacing)</span><br><span class="line">        outRect.right = spacing - (column + 1) * spacing / spanCount; // spacing - (column + 1) * ((1f /    spanCount) * spacing)</span><br><span class="line">        if (position &gt;= spanCount) &#123;</span><br><span class="line">            outRect.top = spacing; // item top</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在仔细看了这个方案的代码，发现它只能解决分割一样宽的情况，如果列表边缘和列表项间的间距不一样，则无法解决。另外有个疑问是它的这个算法是如何推导出来的呢？列表边缘和列表项之间的间距有没有规律可言呢？带着心中的问题，我做了三个不同的统计：</p><p>声明的变量：</p><ul><li>列表宽度：w</li><li>列表列宽：a</li><li>列表列数：c</li><li>列表边间距：x</li><li>列表项间间距：y</li></ul><p>以上变量之间的关系：<br>a = w-2x-(c-1)*y</p><p>假设显示的宽度：w=100</p><h5 id="第一组："><a href="#第一组：" class="headerlink" title="第一组："></a>第一组：</h5><p>x= 12, y=8</p><p>1列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 12           | 12           | 24           | 76          | 16                  |</p><p>2列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 12           | 4            | 16           | 34          | 8                   |<br>| 1          | 4            | 12           | 16           | 34          | 8                   |</p><p>3列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 12           | 1.333333333  | 13.333       | 20          | 5.333333333         |<br>| 1          | 6.666666667  | 6.666666667  | 13.333       | 20          | 5.333333333         |<br>| 2          | 1.333333333  | 12           | 13.333       | 20          | 5.333333333         |</p><p>4列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 12           | 0            | 12           | 13          | 4                   |<br>| 1          | 8            | 4            | 12           | 13          | 4                   |<br>| 2          | 4            | 8            | 12           | 13          | 4                   |<br>| 3          | 0            | 12           | 12           | 13          | 4                   |</p><p>5列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 12           | -0.8         | 11.2         | 8.8         | 3.2                 |<br>| 1          | 8.8          | 2.4          | 11.2         | 8.8         | 3.2                 |<br>| 2          | 5.6          | 5.6          | 11.2         | 8.8         | 3.2                 |<br>| 3          | 2.4          | 8.8          | 11.2         | 8.8         | 3.2                 |<br>| 4          | -0.8         | 12           | 11.2         | 8.8         | 3.2                 |</p><p>根据以上统计，可以得出公式：</p><p>左右间距的递增/减量: p = 2*(y/c) </p><p>x/y =12/8= 1.5</p><p>cl = x - ci * p </p><p>cr = x - (c-(ci+1)) * p</p><h5 id="第二组："><a href="#第二组：" class="headerlink" title="第二组："></a>第二组：</h5><p>x=10, y=8</p><p> 1列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 10           | 10           | 20           | 80          | 12                  |</p><p> 2列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 10           | 4            | 14           | 36          | 6                   |<br>| 1          | 4            | 10           | 14           | 36          | 6                   |</p><p>  3列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a)  | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———— | ——————- |<br>| 0          | 10           | 2            | 12           | 21.333333333 | 4                   |<br>| 1          | 6            | 6            | 12           | 21.333333333 | 4                   |<br>| 2          | 2            | 10           | 12           | 21.333333333 | 4                   |</p><p> 4列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 10           | 1            | 11           | 14          | 3                   |<br>| 1          | 7            | 4            | 11           | 14          | 3                   |<br>| 2          | 4            | 7            | 11           | 14          | 3                   |<br>| 3          | 1            | 10           | 11           | 14          | 3                   |</p><p> 5列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 10           | 0.4          | 10.4         | 9.6         | 2.4                 |<br>| 1          | 7.6          | 2.8          | 10.4         | 9.6         | 2.4                 |<br>| 2          | 5.2          | 5.2          | 10.4         | 9.6         | 2.4                 |<br>| 3          | 2.8          | 7.6          | 10.4         | 9.6         | 2.4                 |<br>| 4          | 0.4          | 10           | 10.4         | 9.6         | 2.4                 |</p><p>根据以上统计，可以得出公式：</p><p>左右间距的递增/减量: p = 1.5*(y/c) </p><p>x/y =10/8= 1.25</p><p>cl = x - ci * p </p><p>cr = x - (c-(ci+1)) * p</p><h5 id="第三组："><a href="#第三组：" class="headerlink" title="第三组："></a>第三组：</h5><p>x=8, y=8</p><p>1列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 8            | 8            | 16           | 84          | 8                   |</p><p>2列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 8            | 4            | 12           | 38          | 4                   |<br>| 1          | 4            | 8            | 12           | 38          | 4                   |</p><p>3列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a)  | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———— | ——————- |<br>| 0          | 8            | 2.666666667  | 10.666666667 | 22.666666667 | 2.666666667         |<br>| 1          | 5.333333333  | 5.333333334  | 10.666666667 | 22.666666667 | 2.666666667         |<br>| 2          | 2.666666667  | 8            | 10.666666667 | 22.666666667 | 2.666666667         |</p><p>4列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 8            | 2            | 10           | 15          | 2                   |<br>| 1          | 6            | 4            | 10           | 15          | 2                   |<br>| 2          | 4            | 6            | 10           | 15          | 2                   |<br>| 3          | 2            | 8            | 10           | 15          | 2                   |</p><p> 5列<br>| 列索引(ci) | 左外边距(cl) | 右外边距(cr) | 左右外边距和 | 列表项宽(a) | 左右间距的递增/减量 |<br>| ———- | ———— | ———— | ———— | ———– | ——————- |<br>| 0          | 8            | 1.6          | 9.6          | 10.4        | 1.6                 |<br>| 1          | 6.4          | 3.2          | 9.6          | 10.4        | 1.6                 |<br>| 2          | 4.8          | 4.8          | 9.6          | 10.4        | 1.6                 |<br>| 3          | 3.2          | 6.4          | 9.6          | 10.4        | 1.6                 |<br>| 4          | 1.6          | 8            | 9.6          | 10.4        | 1.6                 |</p><p>根据以上统计，可以得出公式：</p><p>左右间距的递增/减量: p = y/c</p><p>x/y =8/8= 1</p><p>cl = x - ci * p </p><p>cr = x - (c-(ci+1)) * p</p><p>以上三组的统计出的递增/减量如下</p><table><thead><tr><th>外边距/列表项间间跟比R</th><th>递增/减量P</th></tr></thead><tbody><tr><td>12/8=1.5</td><td>p = 2y/c</td></tr><tr><td>10/8=1.25</td><td>p = 1.5y/c</td></tr><tr><td>8/8 = 1</td><td>p=1y/c</td></tr></tbody></table><p>通过以上对比，发现如下规率<br>2 = 2<em>1.5-1<br>1.5 = 2</em>1.25-1<br>1 = 2*1-1</p><p>所以以P的最终计算公式如下：</p><ul><li>r = x/y</li><li>p = (2r-1)*y/c</li></ul><p><a href="https://github.com/Zane-Inspiration/GridItemDecoration/blob/master/src/org/seaman/decoration/Main.java" target="_blank" rel="noopener">验证代码</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public class Main &#123;</span><br><span class="line">    //[参考](https://stackoverflow.com/questions/28531996/android-recyclerview-gridlayoutmanager-column-spacing/28533234#)</span><br><span class="line">    //算法</span><br><span class="line">    //中间间隔S, 周边间隔ES, 列数C, 列索引I, 比例R=ES/S, 递增量D=(2*R-1)*S/C</span><br><span class="line">    //Left = R*S - I*D</span><br><span class="line">    //Right = R*S - (C-(I+1))*D</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        float edgeSpace = 100;</span><br><span class="line">        float space = 80;</span><br><span class="line">        int column = 5;</span><br><span class="line"></span><br><span class="line">        float ratio = (float) Arith.div(edgeSpace, space);</span><br><span class="line">        float delta = (2 * ratio - 1) * space / column;</span><br><span class="line">        System.out.println(&quot;ratio = &quot; + ratio + &quot; delta = &quot; + delta);</span><br><span class="line"></span><br><span class="line">        float left, right, total;</span><br><span class="line">        for (int i = 0; i &lt; column; i++) &#123;</span><br><span class="line">            left = ratio * space - i * delta;</span><br><span class="line">            right = ratio * space - (column - (i + 1)) * delta;</span><br><span class="line">            total = left + right;</span><br><span class="line">            System.out.println(&quot;column = &quot; + (i + 1) + &quot; left = &quot; + left + &quot; right = &quot; + right + &quot; total = &quot; + total);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图：</p><h4 id="GridLayoutManager"><a href="#GridLayoutManager" class="headerlink" title="GridLayoutManager"></a>GridLayoutManager</h4><p><img src="https://github.com/Zane-Inspiration/ItemDecorations/raw/master/images/GridLayoutManager-sample.gif" alt=""></p><p>我自己写的一库：<a href="https://github.com/Zane-Inspiration/ItemDecorations" target="_blank" rel="noopener">Zane-Inspiration/ItemDecorations: RecyclerView ItemDecoration</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在电商应用中，网格布局是经常用到的，比如相册的选择器的图片预览列表或者瀑布流形式的商品卡片列表。&lt;/p&gt;
&lt;p&gt;在Android中要实现这些功能，现在的做法是使用RecyclerView展示数据然后设置GridLayoutManager或者StaggeredGridLayo
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
      <category term="RecyclerView" scheme="https://Zane-Inspiration.github.io/tags/RecyclerView/"/>
    
      <category term="ItemDecoration" scheme="https://Zane-Inspiration.github.io/tags/ItemDecoration/"/>
    
  </entry>
  
  <entry>
    <title>自定义Behavior控制背景图跟随RecyclerView滑动</title>
    <link href="https://Zane-Inspiration.github.io/2020/01/11/%E8%87%AA%E5%AE%9A%E4%B9%89Behavior%E6%8E%A7%E5%88%B6%E8%83%8C%E6%99%AF%E5%9B%BE%E8%B7%9F%E9%9A%8FRecyclerView%E6%BB%91%E5%8A%A8/"/>
    <id>https://Zane-Inspiration.github.io/2020/01/11/自定义Behavior控制背景图跟随RecyclerView滑动/</id>
    <published>2020-01-11T03:56:22.000Z</published>
    <updated>2020-01-11T04:07:51.363Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet</span><br><span class="line"><span class="keyword">import</span> android.util.Log</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> androidx.coordinatorlayout.widget.CoordinatorLayout</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat</span><br><span class="line"><span class="keyword">import</span> kotlin.math.abs</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BackgroundViewBehavior</span></span>(</span><br><span class="line">    context: Context? = <span class="literal">null</span>,</span><br><span class="line">    attrs: AttributeSet? = <span class="literal">null</span></span><br><span class="line">) : CoordinatorLayout.Behavior&lt;View&gt;(context, attrs) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> totalScroll = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStartNestedScroll</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        coordinatorLayout: <span class="type">CoordinatorLayout</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        child: <span class="type">View</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        directTargetChild: <span class="type">View</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        target: <span class="type">View</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        axes: <span class="type">Int</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        type: <span class="type">Int</span></span></span></span><br><span class="line"><span class="function"><span class="params">    )</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> axes == ViewCompat.SCROLL_AXIS_VERTICAL</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onNestedScroll</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        coordinatorLayout: <span class="type">CoordinatorLayout</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        child: <span class="type">View</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        target: <span class="type">View</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        dxConsumed: <span class="type">Int</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        dyConsumed: <span class="type">Int</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        dxUnconsumed: <span class="type">Int</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        dyUnconsumed: <span class="type">Int</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        type: <span class="type">Int</span></span></span></span><br><span class="line"><span class="function"><span class="params">    )</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onNestedScroll(</span><br><span class="line">            coordinatorLayout,</span><br><span class="line">            child,</span><br><span class="line">            target,</span><br><span class="line">            dxConsumed,</span><br><span class="line">            dyConsumed,</span><br><span class="line">            dxUnconsumed,</span><br><span class="line">            dyUnconsumed,</span><br><span class="line">            type</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> height = child.measuredHeight</span><br><span class="line">        <span class="keyword">val</span> translationY = abs(child.translationY) <span class="comment">//背景往上偏移为负数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//重置总共滑动距离</span></span><br><span class="line">        <span class="keyword">if</span> (translationY == <span class="number">0</span>F) &#123;</span><br><span class="line">            totalScroll = <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Log.v(</span><br><span class="line">            TAG, <span class="string">"dyConsumed = <span class="variable">$dyConsumed</span> height = <span class="variable">$height</span>"</span> +</span><br><span class="line">                    <span class="string">"  translationY = <span class="variable">$translationY</span> totalScroll = <span class="variable">$totalScroll</span>"</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        totalScroll += dyConsumed</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dyConsumed &gt; <span class="number">0</span>) &#123; <span class="comment">//手指往上滑</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (translationY &lt;= height) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> offset: <span class="built_in">Float</span> = (translationY + dyConsumed)</span><br><span class="line">                <span class="keyword">if</span> (offset &gt; height) &#123;</span><br><span class="line">                    offset = height.toFloat()</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                child.translationY = -offset</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dyConsumed &lt; <span class="number">0</span>) &#123; <span class="comment">//手指往下滑</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (totalScroll &lt;= height) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (translationY &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> offset: <span class="built_in">Float</span> = (translationY + dyConsumed)</span><br><span class="line">                    <span class="keyword">if</span> (offset &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                        offset = <span class="number">0</span>F</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    child.translationY = -offset</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        const <span class="keyword">val</span> TAG = <span class="string">"BackgroundViewBehavior"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
      <category term="Kotlin" scheme="https://Zane-Inspiration.github.io/tags/Kotlin/"/>
    
      <category term="CoordinatorLayout" scheme="https://Zane-Inspiration.github.io/tags/CoordinatorLayout/"/>
    
      <category term="Behavior" scheme="https://Zane-Inspiration.github.io/tags/Behavior/"/>
    
  </entry>
  
  <entry>
    <title>设置Material TabLayout 固定长度指示器</title>
    <link href="https://Zane-Inspiration.github.io/2020/01/09/%E8%AE%BE%E7%BD%AEMaterial-TabLayout-%E5%9B%BA%E5%AE%9A%E9%95%BF%E5%BA%A6%E6%8C%87%E7%A4%BA%E5%99%A8/"/>
    <id>https://Zane-Inspiration.github.io/2020/01/09/设置Material-TabLayout-固定长度指示器/</id>
    <published>2020-01-09T13:26:52.000Z</published>
    <updated>2020-01-09T13:33:14.585Z</updated>
    
    <content type="html"><![CDATA[<h3 id="利用Java反射修改Tablayout指示器长度"><a href="#利用Java反射修改Tablayout指示器长度" class="headerlink" title="利用Java反射修改Tablayout指示器长度"></a>利用Java反射修改Tablayout指示器长度</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.res.Resources;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.util.TypedValue;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewTreeObserver;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.android.material.tabs.TabLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TabLayoutEx</span> <span class="keyword">extends</span> <span class="title">TabLayout</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TabLayoutEx</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TabLayoutEx</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TabLayoutEx</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        init(attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        setTabIndicatorFullWidth(<span class="keyword">false</span>);</span><br><span class="line">        setIndicatorWidth(<span class="number">15</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">DefPreDrawListener</span> <span class="keyword">implements</span> <span class="title">ViewTreeObserver</span>.<span class="title">OnPreDrawListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> LinearLayout tabStrip = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> tabWidth;</span><br><span class="line">        <span class="keyword">private</span> Field fieldLeft;</span><br><span class="line">        <span class="keyword">private</span> Field fieldRight;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTabStrip</span><span class="params">(LinearLayout tabStrip, <span class="keyword">int</span> width)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.tabStrip = tabStrip;</span><br><span class="line">                <span class="keyword">this</span>.tabWidth = width;</span><br><span class="line">                Class cls = tabStrip.getClass();</span><br><span class="line">                fieldLeft = cls.getDeclaredField(<span class="string">"indicatorLeft"</span>);</span><br><span class="line">                fieldLeft.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                fieldRight = cls.getDeclaredField(<span class="string">"indicatorRight"</span>);</span><br><span class="line">                fieldRight.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onPreDraw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (tabWidth &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">int</span> left = fieldLeft.getInt(<span class="keyword">this</span>.tabStrip);</span><br><span class="line">                    <span class="keyword">int</span> right = fieldRight.getInt(<span class="keyword">this</span>.tabStrip);</span><br><span class="line">                    <span class="comment">//根据目标宽度及现在的宽度调整为合适的left和right</span></span><br><span class="line">                    <span class="keyword">int</span> diff = right - left - tabWidth;</span><br><span class="line">                    left = left + diff / <span class="number">2</span>;</span><br><span class="line">                    right = right - diff / <span class="number">2</span>;</span><br><span class="line">                    fieldLeft.setInt(<span class="keyword">this</span>.tabStrip, left);</span><br><span class="line">                    fieldRight.setInt(<span class="keyword">this</span>.tabStrip, right);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DefPreDrawListener defPreDrawListener = <span class="keyword">new</span> DefPreDrawListener();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIndicatorWidth</span><span class="params">(<span class="keyword">int</span> widthDp)</span> </span>&#123;</span><br><span class="line">        Class&lt;?&gt; tabLayout = TabLayout.class;</span><br><span class="line">        Field tabStrip = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            tabStrip = tabLayout.getDeclaredField(<span class="string">"slidingTabIndicator"</span>);</span><br><span class="line">            tabStrip.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            LinearLayout tabIndicator = (LinearLayout) tabStrip.get(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">int</span> width = (<span class="keyword">int</span>) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, widthDp, Resources.getSystem().getDisplayMetrics());</span><br><span class="line">            <span class="comment">//avoid add preDrawListener multi times</span></span><br><span class="line">            tabIndicator.getViewTreeObserver().removeOnPreDrawListener(defPreDrawListener);</span><br><span class="line">            tabIndicator.getViewTreeObserver().addOnPreDrawListener(defPreDrawListener);</span><br><span class="line">            defPreDrawListener.setTabStrip(tabIndicator, width);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="混淆配置"><a href="#混淆配置" class="headerlink" title="混淆配置"></a>混淆配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-keepclasseswithmembers class com.google.android.material.tabs.TabLayout &#123;</span><br><span class="line"> *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclasseswithmembers class com.google.android.material.tabs.TabLayout$* &#123;</span><br><span class="line"> *;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://stackoverflow.com/questions/45715737/android-tablayout-custom-indicator-width" target="_blank" rel="noopener">Android TabLayout custom indicator width - Stack Overflow</a></li><li><a href="https://github.com/material-components/material-components-android" target="_blank" rel="noopener">material-components/material-components-android: Modular and customizable Material Design UI components for Android</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;利用Java反射修改Tablayout指示器长度&quot;&gt;&lt;a href=&quot;#利用Java反射修改Tablayout指示器长度&quot; class=&quot;headerlink&quot; title=&quot;利用Java反射修改Tablayout指示器长度&quot;&gt;&lt;/a&gt;利用Java反射修改Tabl
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
      <category term="Java" scheme="https://Zane-Inspiration.github.io/tags/Java/"/>
    
      <category term="Material" scheme="https://Zane-Inspiration.github.io/tags/Material/"/>
    
      <category term="TabLayout" scheme="https://Zane-Inspiration.github.io/tags/TabLayout/"/>
    
  </entry>
  
  <entry>
    <title>自定义Glide圆角BitmapTransformation</title>
    <link href="https://Zane-Inspiration.github.io/2020/01/09/%E8%87%AA%E5%AE%9A%E4%B9%89Glide%E5%9C%86%E8%A7%92BitmapTransformation/"/>
    <id>https://Zane-Inspiration.github.io/2020/01/09/自定义Glide圆角BitmapTransformation/</id>
    <published>2020-01-09T13:12:15.000Z</published>
    <updated>2020-01-29T03:38:41.390Z</updated>
    
    <content type="html"><![CDATA[<h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapShader;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PorterDuff;</span><br><span class="line"><span class="keyword">import</span> android.graphics.RectF;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Shader;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;</span><br><span class="line"><span class="keyword">import</span> com.bumptech.glide.load.resource.bitmap.BitmapTransformation;</span><br><span class="line"><span class="keyword">import</span> com.bumptech.glide.load.resource.bitmap.TransformationUtils;</span><br><span class="line"><span class="keyword">import</span> com.bumptech.glide.util.Preconditions;</span><br><span class="line"><span class="keyword">import</span> com.bumptech.glide.util.Util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Seaman on 2020-01-20.</span></span><br><span class="line"><span class="comment"> * Banggood Ltd</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRoundedCorners</span> <span class="keyword">extends</span> <span class="title">BitmapTransformation</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ID = <span class="string">"org.seaman.glide.CustomRoundedCorners"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] ID_BYTES = ID.getBytes(CHARSET);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RectF mSquareCornersRect = <span class="keyword">new</span> RectF();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> roundingRadius;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> onlyTopRounded;</span><br><span class="line">    <span class="keyword">private</span> Lock mDrawableLock;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roundingRadius the corner radius (in device-specific pixels).</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalArgumentException if rounding radius is 0 or less.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomRoundedCorners</span><span class="params">(<span class="keyword">int</span> roundingRadius)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(roundingRadius, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roundingRadius the corner radius (in device-specific pixels).</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> onlyTopRounded only top left and top right corner rounded</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalArgumentException if rounding radius is 0 or less.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomRoundedCorners</span><span class="params">(<span class="keyword">int</span> roundingRadius, <span class="keyword">boolean</span> onlyTopRounded)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.onlyTopRounded = onlyTopRounded;</span><br><span class="line">        Preconditions.checkArgument(roundingRadius &gt; <span class="number">0</span>, <span class="string">"roundingRadius must be greater than 0."</span>);</span><br><span class="line">        <span class="keyword">this</span>.roundingRadius = roundingRadius;</span><br><span class="line">        mDrawableLock = TransformationUtils.getBitmapDrawableLock();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Avoids warnings in M+.</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        canvas.setBitmap(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Bitmap <span class="title">getAlphaSafeBitmap</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @NonNull BitmapPool pool, @NonNull Bitmap maybeAlphaSafe)</span> </span>&#123;</span><br><span class="line">        Bitmap.Config safeConfig = getAlphaSafeConfig(maybeAlphaSafe);</span><br><span class="line">        <span class="keyword">if</span> (safeConfig.equals(maybeAlphaSafe.getConfig())) &#123;</span><br><span class="line">            <span class="keyword">return</span> maybeAlphaSafe;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Bitmap argbBitmap =</span><br><span class="line">                pool.get(maybeAlphaSafe.getWidth(), maybeAlphaSafe.getHeight(), safeConfig);</span><br><span class="line">        <span class="keyword">new</span> Canvas(argbBitmap).drawBitmap(maybeAlphaSafe, <span class="number">0</span> <span class="comment">/*left*/</span>, <span class="number">0</span> <span class="comment">/*top*/</span>, <span class="keyword">null</span> <span class="comment">/*paint*/</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We now own this Bitmap. It's our responsibility to replace it in the pool outside this method</span></span><br><span class="line">        <span class="comment">// when we're finished with it.</span></span><br><span class="line">        <span class="keyword">return</span> argbBitmap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Bitmap.<span class="function">Config <span class="title">getAlphaSafeConfig</span><span class="params">(@NonNull Bitmap inBitmap)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">            <span class="comment">// Avoid short circuiting the sdk check.</span></span><br><span class="line">            <span class="keyword">if</span> (Bitmap.Config.RGBA_F16.equals(inBitmap.getConfig())) &#123; <span class="comment">// NOPMD</span></span><br><span class="line">                <span class="keyword">return</span> Bitmap.Config.RGBA_F16;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Bitmap.Config.ARGB_8888;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Bitmap <span class="title">transform</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @NonNull BitmapPool pool, @NonNull Bitmap toTransform, <span class="keyword">int</span> outWidth, <span class="keyword">int</span> outHeight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (onlyTopRounded) &#123;</span><br><span class="line">            <span class="keyword">return</span> onlyRoundedTopCorners(pool, toTransform, roundingRadius);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> TransformationUtils.roundedCorners(pool, toTransform, roundingRadius);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Bitmap <span class="title">onlyRoundedTopCorners</span><span class="params">(BitmapPool pool, Bitmap inBitmap, <span class="keyword">int</span> roundingRadius)</span> </span>&#123;</span><br><span class="line">        Preconditions.checkArgument(roundingRadius &gt; <span class="number">0</span>, <span class="string">"roundingRadius must be greater than 0."</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Alpha is required for this transformation.</span></span><br><span class="line">        Bitmap.Config safeConfig = getAlphaSafeConfig(inBitmap);</span><br><span class="line">        Bitmap toTransform = getAlphaSafeBitmap(pool, inBitmap);</span><br><span class="line">        Bitmap result = pool.get(toTransform.getWidth(), toTransform.getHeight(), safeConfig);</span><br><span class="line"></span><br><span class="line">        result.setHasAlpha(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        BitmapShader shader = <span class="keyword">new</span> BitmapShader(toTransform, Shader.TileMode.CLAMP,</span><br><span class="line">                Shader.TileMode.CLAMP);</span><br><span class="line">        Paint paint = <span class="keyword">new</span> Paint();</span><br><span class="line">        paint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        paint.setShader(shader);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> width = result.getWidth();</span><br><span class="line">        <span class="keyword">int</span> height = result.getHeight();</span><br><span class="line"></span><br><span class="line">        RectF rect = <span class="keyword">new</span> RectF(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        mDrawableLock.lock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Canvas canvas = <span class="keyword">new</span> Canvas(result);</span><br><span class="line">            canvas.drawColor(Color.TRANSPARENT, PorterDuff.Mode.CLEAR);</span><br><span class="line">            canvas.drawRoundRect(rect, roundingRadius, roundingRadius, paint);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Right Bottom</span></span><br><span class="line">            mSquareCornersRect.set(width - roundingRadius, height - roundingRadius, width, height);</span><br><span class="line">            canvas.drawRect(mSquareCornersRect, paint);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Left Bottom</span></span><br><span class="line">            mSquareCornersRect.set(<span class="number">0</span>, height - roundingRadius, roundingRadius, height);</span><br><span class="line">            canvas.drawRect(mSquareCornersRect, paint);</span><br><span class="line"></span><br><span class="line">            clear(canvas);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            mDrawableLock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!toTransform.equals(inBitmap)) &#123;</span><br><span class="line">            pool.put(toTransform);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> CustomRoundedCorners) &#123;</span><br><span class="line">            CustomRoundedCorners other = (CustomRoundedCorners) o;</span><br><span class="line">            <span class="keyword">return</span> roundingRadius == other.roundingRadius</span><br><span class="line">                    &amp;&amp; onlyTopRounded == other.onlyTopRounded;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Util.hashCode(ID.hashCode(),</span><br><span class="line">                Util.hashCode(roundingRadius,</span><br><span class="line">                        Util.hashCode(onlyTopRounded)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateDiskCacheKey</span><span class="params">(@NonNull MessageDigest messageDigest)</span> </span>&#123;</span><br><span class="line">        messageDigest.update(ID_BYTES);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] radiusData = ByteBuffer.allocate(<span class="number">5</span>)</span><br><span class="line">                .putInt(roundingRadius)</span><br><span class="line">                .put((<span class="keyword">byte</span>) (onlyTopRounded ? <span class="number">1</span> : <span class="number">0</span>))</span><br><span class="line">                .array();</span><br><span class="line">        messageDigest.update(radiusData);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://github.com/bumptech/glide" target="_blank" rel="noopener">bumptech/glide: An image loading and caching library for Android focused on smooth scrolling</a></li><li><a href="https://github.com/vinc3m1/RoundedImageView/blob/master/roundedimageview/src/main/java/com/makeramen/roundedimageview/RoundedTransformationBuilder.java" target="_blank" rel="noopener">RoundedImageView/RoundedTransformationBuilder.java at master · vinc3m1/RoundedImageView</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;核心代码&quot;&gt;&lt;a href=&quot;#核心代码&quot; class=&quot;headerlink&quot; title=&quot;核心代码&quot;&gt;&lt;/a&gt;核心代码&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
      <category term="Java" scheme="https://Zane-Inspiration.github.io/tags/Java/"/>
    
      <category term="Glide" scheme="https://Zane-Inspiration.github.io/tags/Glide/"/>
    
  </entry>
  
  <entry>
    <title>APP调用系统分享文本内容</title>
    <link href="https://Zane-Inspiration.github.io/2019/01/13/APP%E8%B0%83%E7%94%A8%E7%B3%BB%E7%BB%9F%E5%88%86%E4%BA%AB%E6%96%87%E6%9C%AC%E5%86%85%E5%AE%B9/"/>
    <id>https://Zane-Inspiration.github.io/2019/01/13/APP调用系统分享文本内容/</id>
    <published>2019-01-13T07:36:47.000Z</published>
    <updated>2019-01-13T07:46:42.384Z</updated>
    
    <content type="html"><![CDATA[<h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">val action = Intent.ACTION_SEND</span><br><span class="line">val mimeType = &quot;text/plain&quot;</span><br><span class="line">val text = &quot;https://github.com&quot;</span><br><span class="line">val subject = &quot;this is a subject&quot;</span><br><span class="line">val title = &quot;Share to your friends&quot;</span><br><span class="line"></span><br><span class="line">//查询系统有哪些APP支持文本内容分享</span><br><span class="line">val queryIntent = Intent().apply &#123;</span><br><span class="line">    this.action = action</span><br><span class="line">    this.type = mimeType</span><br><span class="line">    this.putExtra(Intent.EXTRA_TEXT, text)</span><br><span class="line">    this.putExtra(Intent.EXTRA_SUBJECT, subject)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">val resolveInfoList = packageManager.queryIntentActivities(queryIntent, MATCH_DEFAULT_ONLY)</span><br><span class="line">//可选的分享应用Intent</span><br><span class="line">val initialIntents = mutableListOf&lt;LabeledIntent&gt;()</span><br><span class="line">for (info in resolveInfoList) &#123;</span><br><span class="line"></span><br><span class="line">    val appName = info.loadLabel(packageManager)</span><br><span class="line">    val activityInfo = info.activityInfo</span><br><span class="line">    val targetPackageName = activityInfo.packageName</span><br><span class="line">    val activityName = activityInfo.name</span><br><span class="line"></span><br><span class="line">    Log.v(TAG, &quot;targetPackageName = $targetPackageName  appName = $appName activityName = $activityName&quot;)</span><br><span class="line"></span><br><span class="line">    //过滤掉APP自己（在API18的模拟器上发现有BUG，这样写也不能过虑）</span><br><span class="line">    if (!this.packageName!!.contentEquals(targetPackageName)) &#123;</span><br><span class="line"></span><br><span class="line">        val intent = Intent().apply &#123;</span><br><span class="line">            this.component = ComponentName(targetPackageName, activityName)</span><br><span class="line">            this.action = action</span><br><span class="line">            this.type = mimeType</span><br><span class="line">            this.addFlags(FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET)</span><br><span class="line">            this.putExtra(Intent.EXTRA_TEXT, text)</span><br><span class="line">            this.putExtra(Intent.EXTRA_SUBJECT, subject)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        initialIntents.add(LabeledIntent(intent, targetPackageName, appName, info.icon))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (initialIntents.size &gt; 0) &#123;</span><br><span class="line">    //以APP名字来排序</span><br><span class="line">    initialIntents.sortBy &#123; it.nonLocalizedLabel.toString() &#125;</span><br><span class="line"></span><br><span class="line">    //用来创建chooserIntent的Intent的APP会被系统追加到分享选择列表的最后一项</span><br><span class="line">    val intent = initialIntents.removeAt(initialIntents.lastIndex)</span><br><span class="line"></span><br><span class="line">    val chooserIntent = if (Build.VERSION.SDK_INT &gt;= 22) &#123;</span><br><span class="line"></span><br><span class="line">        //用户选择目标应用的时候，系统会发广播到MyReceiver</span><br><span class="line">        val receiver = Intent(this, MyReceiver::class.java)</span><br><span class="line">        val pendingIntent = PendingIntent.getBroadcast(</span><br><span class="line">            this, 0, receiver, PendingIntent.FLAG_UPDATE_CURRENT</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        Intent.createChooser(intent, title, pendingIntent.intentSender)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        Intent.createChooser(intent, title)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    chooserIntent.apply &#123;</span><br><span class="line">        this.putExtra(Intent.EXTRA_INITIAL_INTENTS, initialIntents.toTypedArray())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    startActivity(chooserIntent)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="API22-及以上版本用于接收用户选中的APP的广播"><a href="#API22-及以上版本用于接收用户选中的APP的广播" class="headerlink" title="API22 及以上版本用于接收用户选中的APP的广播"></a>API22 及以上版本用于接收用户选中的APP的广播</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">class MyReceiver : BroadcastReceiver() &#123;</span><br><span class="line"></span><br><span class="line">    override fun onReceive(context: Context, intent: Intent) &#123;</span><br><span class="line">        // This method is called when the BroadcastReceiver is receiving an Intent broadcast.</span><br><span class="line">        Log.v(TAG, &quot;onReceive = $intent&quot;)</span><br><span class="line">        intent.extras?.let &#123; bundle -&gt;</span><br><span class="line">            for (key in bundle.keySet()) &#123;</span><br><span class="line">                Log.v(TAG, &quot;onReceive key = $key&quot;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP_MR1) &#123;</span><br><span class="line"></span><br><span class="line">                val componentName = bundle[Intent.EXTRA_CHOSEN_COMPONENT] as ComponentName</span><br><span class="line">                Log.v(TAG, &quot;onReceive componentName = $componentName&quot;)</span><br><span class="line"></span><br><span class="line">                val pm = context.packageManager</span><br><span class="line"></span><br><span class="line">                //取得用户选中选的应用名字</span><br><span class="line">                val applicationLabel = pm.getApplicationLabel(pm.getApplicationInfo(componentName.packageName, 0))</span><br><span class="line">                Log.v(TAG, &quot;onReceive applicationLabel = $applicationLabel&quot;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    companion object &#123;</span><br><span class="line">        const val TAG = &quot;MyReceiver&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> </p><h3 id="广播接收者采用静态注册形式"><a href="#广播接收者采用静态注册形式" class="headerlink" title="广播接收者采用静态注册形式"></a>广播接收者采用静态注册形式</h3> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;receiver</span><br><span class="line">               android:name=&quot;.MyReceiver&quot;</span><br><span class="line">               android:enabled=&quot;true&quot;</span><br><span class="line">               android:exported=&quot;true&quot;/&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;核心代码&quot;&gt;&lt;a href=&quot;#核心代码&quot; class=&quot;headerlink&quot; title=&quot;核心代码&quot;&gt;&lt;/a&gt;核心代码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
      <category term="Kotlin" scheme="https://Zane-Inspiration.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>密码强度计算</title>
    <link href="https://Zane-Inspiration.github.io/2018/12/02/%E5%AF%86%E7%A0%81%E5%BC%BA%E5%BA%A6%E8%AE%A1%E7%AE%97/"/>
    <id>https://Zane-Inspiration.github.io/2018/12/02/密码强度计算/</id>
    <published>2018-12-02T08:27:45.000Z</published>
    <updated>2019-01-13T07:46:32.866Z</updated>
    
    <content type="html"><![CDATA[<p>最近公司Android项目有个需求是根据用户输入的密码计算强度分数，密码强度计算逻辑如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">密码强度规则：</span><br><span class="line"></span><br><span class="line">符合密码基本规则者为70分。</span><br><span class="line"></span><br><span class="line">＋(总字符数－8) × 4</span><br><span class="line">＋(字母字符数－大写字母字符数) × (字母字符数 －小写字母字符数) × 2</span><br><span class="line">－(接连重复字符数) × 2</span><br><span class="line">－(接连数字字符数－3) × 1</span><br><span class="line">－(接连字母字符数－3) × 1</span><br><span class="line">－(3码以上的连续数字) × 3</span><br><span class="line">－(3码以上的连续字母) × 3</span><br><span class="line">规则： 总分低於60者为弱(weak)，高于80者（含）为强(strong)，介於兩者之间为中等(medium)。</span><br><span class="line"></span><br><span class="line">举例： 1234567890a的最后分数</span><br><span class="line">70+(11-8)x4+(1-0)x(1-1)x2-(0x2)-(10-3)x1-(0-3)x1-(10x3)-(0x3)</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line"></span><br><span class="line">接连重复字符数：指连续重复的字符，如123775ab，此项就是 -2x2；如果12336588aab，接连重复字符数就是6（33、88、aa）</span><br><span class="line">接连数字字符数：指连续为数字的字符，如123775ab，此项就是 -(6-3)x1</span><br><span class="line">接连字母字符数：指连续为字母的字符，如123775ab，此项就是 -(2-3)x1</span><br><span class="line">3码以上的连续数字：指连着3个以上的连续数字，如12345678a，此项就是 -8x3</span><br><span class="line">3码以上的连续字母：指连着3个以上的连续字母</span><br></pre></td></tr></table></figure><p>看了以上规则，我刚开始想到的是查询Java有由哪些API可以方便的操作字符，然后通过遍历字符串的字符来处理。经过查看API确定了字符处理类 <a href="https://docs.oracle.com/javase/7/docs/api/java/lang/Character.html" target="_blank" rel="noopener">java.lang.Character</a>，根据需求这里用到方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//判断字符是否是字母</span><br><span class="line">java.lang.Character#isLetter(char)</span><br><span class="line"></span><br><span class="line">//判断字符是否是数字</span><br><span class="line">java.lang.Character#isDigit(char)</span><br><span class="line"></span><br><span class="line">//判断字符是否是数字或者字母</span><br><span class="line">java.lang.Character#isLetterOrDigit(char)</span><br><span class="line"></span><br><span class="line">//判断字符是否是小写</span><br><span class="line">java.lang.Character#isLowerCase(char)</span><br><span class="line"></span><br><span class="line">//判断字符是否是大写</span><br><span class="line">java.lang.Character#isUpperCase(char)</span><br></pre></td></tr></table></figure><p>使用以上方法，我用一个for循环实现了需求。但经过反思感觉实现方式不太好，而且容易出错思路也不清晰，所以把方向转向正则表达式。经过查询资料，找到另一种实现方式。</p><blockquote><p>首先把规则一条条拆开，一条条实现。</p></blockquote><h3 id="1-计算字母字符数"><a href="#1-计算字母字符数" class="headerlink" title="1. 计算字母字符数"></a>1. 计算字母字符数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//字母字符</span><br><span class="line">val letterPattern = Pattern.compile(&quot;[a-zA-Z]+&quot;)!!</span><br><span class="line">//小写字母字符</span><br><span class="line">val lowerLetterPattern = Pattern.compile(&quot;[a-z]+&quot;)!!</span><br><span class="line">//大写字母字符</span><br><span class="line">val upperLetterPattern = Pattern.compile(&quot;[A-Z]+&quot;)!!</span><br><span class="line"></span><br><span class="line">private fun getLetterCount(text: String, type: Int): Int &#123;</span><br><span class="line">       val matcher = when (type) &#123;</span><br><span class="line">           1 -&gt; lowerLetterPattern.matcher(text)</span><br><span class="line">           2 -&gt; upperLetterPattern.matcher(text)</span><br><span class="line">           else -&gt; letterPattern.matcher(text)</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       var count = 0</span><br><span class="line">       while (matcher.find()) &#123;</span><br><span class="line">           count += matcher.group().length</span><br><span class="line">       &#125;</span><br><span class="line">       return count</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="2-计算接连字符数"><a href="#2-计算接连字符数" class="headerlink" title="2. 计算接连字符数"></a>2. 计算接连字符数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">//接连重复字符数</span><br><span class="line">val repeatGroupPattern = Pattern.compile(&quot;([0-9a-zA-Z])\\1+&quot;)!!</span><br><span class="line">//接连数字字符数</span><br><span class="line">val digitGroupPattern = Pattern.compile(&quot;[0-9]&#123;2,&#125;&quot;)!!</span><br><span class="line">//接连字母字符数</span><br><span class="line">val letterGroupPattern = Pattern.compile(&quot;[a-zA-Z]&#123;2,&#125;&quot;)!!</span><br><span class="line"></span><br><span class="line">private fun getGroupCharCount(text: String, type: Int): Pair&lt;Int, MutableList&lt;String&gt;&gt; &#123;</span><br><span class="line">       val matcher = when (type) &#123;</span><br><span class="line">           0 -&gt; repeatGroupPattern.matcher(text)</span><br><span class="line">           1 -&gt; digitGroupPattern.matcher(text)</span><br><span class="line">           else -&gt; letterGroupPattern.matcher(text)</span><br><span class="line">       &#125;</span><br><span class="line">       var count = 0</span><br><span class="line">       val groups = mutableListOf&lt;String&gt;()</span><br><span class="line">       while (matcher.find()) &#123;</span><br><span class="line">           val group = matcher.group()</span><br><span class="line">           count += group.length</span><br><span class="line">           groups.add(group)</span><br><span class="line">       &#125;</span><br><span class="line">       return count to groups</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="3-有序的连续增量字符（这个只能通过比较字符ASCII实现）"><a href="#3-有序的连续增量字符（这个只能通过比较字符ASCII实现）" class="headerlink" title="3. 有序的连续增量字符（这个只能通过比较字符ASCII实现）"></a>3. 有序的连续增量字符（这个只能通过比较字符ASCII实现）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">//3码以上的连续数字</span><br><span class="line">//3码以上的连续字母</span><br><span class="line">private fun getOrderCharGroups(text: String, type: Int): Pair&lt;Int, MutableList&lt;String&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">       val indices = text.indices</span><br><span class="line"></span><br><span class="line">       val groups = mutableListOf&lt;String&gt;()</span><br><span class="line"></span><br><span class="line">       var hasNext: Boolean</span><br><span class="line">       var startIndex = 0 //每组连续字符的开始位置索引</span><br><span class="line">       var hitCount = 0 //每组连续字符的个数</span><br><span class="line">       var totalCount = 0 //所有连续字符的总个数</span><br><span class="line">       for (index in indices) &#123;</span><br><span class="line">           hitCount += 1</span><br><span class="line">           val curChar = text[index]</span><br><span class="line">           //是否有连续的下一项</span><br><span class="line">           hasNext = if (index + 1 in indices) &#123;</span><br><span class="line">               val nextChar = text[index + 1]</span><br><span class="line">               curChar + 1 == nextChar</span><br><span class="line">           &#125; else &#123;</span><br><span class="line">               false</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           //连续字符结束，记录起来</span><br><span class="line">           if (!hasNext) &#123;</span><br><span class="line">               if (hitCount &gt;= 3) &#123;</span><br><span class="line">                   if (type == 0 &amp;&amp; curChar.isDigit()) &#123; //数字连续字符</span><br><span class="line">                       totalCount += hitCount</span><br><span class="line">                       groups.add(text.substring(startIndex, startIndex + hitCount))</span><br><span class="line">                   &#125; else if (type == 1 &amp;&amp; curChar.isLetter()) &#123; //字母连续字符</span><br><span class="line">                       totalCount += hitCount</span><br><span class="line">                       groups.add(text.substring(startIndex, startIndex + hitCount))</span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               hitCount = 0</span><br><span class="line">               startIndex = index + 1</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       return totalCount to groups</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li><h3 id="最后就是计算总分逻辑"><a href="#最后就是计算总分逻辑" class="headerlink" title="最后就是计算总分逻辑"></a>最后就是计算总分逻辑</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">private fun calculateSecurityScore(text: String) &#123;</span><br><span class="line"></span><br><span class="line">        //密码强度规则：</span><br><span class="line">        //</span><br><span class="line">        //符合密码基本规则者为70分。</span><br><span class="line">        //</span><br><span class="line">        //    ＋(总字符数－8) × 4</span><br><span class="line">        //    ＋(字母字符数－大写字母字符数) × (字母字符数 －小写字母字符数) × 2</span><br><span class="line">        //    －(接连重复字符数) × 2</span><br><span class="line">        //    －(接连数字字符数－3) × 1</span><br><span class="line">        //    －(接连字母字符数－3) × 1</span><br><span class="line">        //    －(3码以上的连续数字) × 3</span><br><span class="line">        //    －(3码以上的连续字母) × 3</span><br><span class="line">        //</span><br><span class="line">        //规则：</span><br><span class="line">        //    总分低於60者为弱(weak)，高于80者（含）为强(strong)，介於兩者之间为中等(medium)。</span><br><span class="line">        //</span><br><span class="line">        //举例：</span><br><span class="line">        //1234567890a的最后分数</span><br><span class="line">        //70+ （11-8）*4 +（1-0）*（1-1）*2 - （0*2） -（10-3）*1 - （0-3）*1 -（10*3）-（0*3）</span><br><span class="line"></span><br><span class="line">        //字母字符数</span><br><span class="line">        val letterCount = getLetterCount(text, 0)</span><br><span class="line">        //小写字母字符数</span><br><span class="line">        val lowerLetterCount = getLetterCount(text, 1)</span><br><span class="line">        //大写字母字符数</span><br><span class="line">        val upperLetterCount = getLetterCount(text, 2)</span><br><span class="line">        //接连重复字符数</span><br><span class="line">        val (repeatCount, repeatGroups) = getGroupCharCount(text, 0)</span><br><span class="line">        //接连数字字符数</span><br><span class="line">        val (continueDigitCount, continueDigitGroups) = getGroupCharCount(text, 1)</span><br><span class="line">        //接连字母字符数</span><br><span class="line">        val (continueLetterCount, continueLetterGroups) = getGroupCharCount(text, 2)</span><br><span class="line">        //3码以上的连续数字数</span><br><span class="line">        val (orderDigitCount, orderDigitGroups) = getOrderCharGroups(text, 0)</span><br><span class="line">        //3码以上的连续字母数</span><br><span class="line">        val (orderLetterCount, orderLetterGroups) = getOrderCharGroups(text, 1)</span><br><span class="line"></span><br><span class="line">        var totalScore = 70</span><br><span class="line"></span><br><span class="line">        //＋(总字符数－8) × 4</span><br><span class="line">        val score1 = (text.length - 8) * 4</span><br><span class="line">        totalScore += score1</span><br><span class="line"></span><br><span class="line">        //＋(字母字符数－大写字母字符数) × (字母字符数 －小写字母字符数) × 2</span><br><span class="line">        val score2 = (letterCount - upperLetterCount) * (letterCount - lowerLetterCount) * 2</span><br><span class="line">        totalScore += score2</span><br><span class="line"></span><br><span class="line">        //－(接连重复字符数) × 2</span><br><span class="line">        val score3 = repeatCount * 2</span><br><span class="line">        totalScore -= score3</span><br><span class="line"></span><br><span class="line">        //－(接连数字字符数－3) × 1</span><br><span class="line">        val score4 = (continueDigitCount - 3) * 1</span><br><span class="line">        totalScore -= score4</span><br><span class="line"></span><br><span class="line">        //－(接连字母字符数－3) × 1</span><br><span class="line">        val score5 = (continueLetterCount - 3) * 1</span><br><span class="line">        totalScore -= score5</span><br><span class="line"></span><br><span class="line">        //－(3码以上的连续数字) × 3</span><br><span class="line">        val score6 = orderDigitCount * 3</span><br><span class="line">        totalScore -= score6</span><br><span class="line"></span><br><span class="line">        //－(3码以上的连续字母) × 3</span><br><span class="line">        val score7 = orderLetterCount * 3</span><br><span class="line">        totalScore -= score7</span><br><span class="line"></span><br><span class="line">        val textShow = &quot;总字符数 = $&#123;text.length&#125;\n&quot; +</span><br><span class="line">                &quot;字母字符数 = $letterCount\n&quot; +</span><br><span class="line">                &quot;小写字母字符数 = $lowerLetterCount\n&quot; +</span><br><span class="line">                &quot;大写字母字符数 = $upperLetterCount\n&quot; +</span><br><span class="line">                &quot;接连重复字符数 = $repeatCount\n$repeatGroups\n&quot; +</span><br><span class="line">                &quot;接连数字字符数 = $continueDigitCount\n$continueDigitGroups\n&quot; +</span><br><span class="line">                &quot;接连字母字符数 = $continueLetterCount\n$continueLetterGroups\n&quot; +</span><br><span class="line">                &quot;3码以上的连续数字数 = $orderDigitCount\n$orderDigitGroups\n&quot; +</span><br><span class="line">                &quot;3码以上的连续字母数 = $orderLetterCount\n$orderLetterGroups\n&quot; +</span><br><span class="line">                &quot;总分：$totalScore = 70 + ($score1) + ($score2) - ($score3) - ($score4) - ($score5) - ($score6) - ($score7)&quot;</span><br><span class="line">        Log.v(</span><br><span class="line">            TAG, textShow</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        securityScore.text = textShow</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近公司Android项目有个需求是根据用户输入的密码计算强度分数，密码强度计算逻辑如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
      <category term="Kotlin" scheme="https://Zane-Inspiration.github.io/tags/Kotlin/"/>
    
      <category term="Java" scheme="https://Zane-Inspiration.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Android 使用 Spannable 设置样式</title>
    <link href="https://Zane-Inspiration.github.io/2018/08/09/Android-%E4%BD%BF%E7%94%A8-Spannable-%E8%AE%BE%E7%BD%AE%E6%A0%B7%E5%BC%8F/"/>
    <id>https://Zane-Inspiration.github.io/2018/08/09/Android-使用-Spannable-设置样式/</id>
    <published>2018-08-09T15:24:07.000Z</published>
    <updated>2018-08-09T15:25:52.750Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://developer.android.google.cn/reference/android/text/Spannable" target="_blank" rel="noopener">Spannable</a> 是一种文本对象，让您可以使用颜色和字体粗细等字体属性进行样式设置。 您可以使用 <a href="https://developer.android.google.cn/reference/android/text/SpannableStringBuilder" target="_blank" rel="noopener">SpannableStringBuilder</a> 生成文本，然后对文本应用 <a href="https://developer.android.google.cn/reference/android/text/style/package-summary" target="_blank" rel="noopener">android.text.style</a> 包中定义的样式。</p><p>您可以利用下列辅助工具方法来设置许多 spannable 文本创建工作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Returns a CharSequence that concatenates the specified array of CharSequence</span><br><span class="line"> * objects and then applies a list of zero or more tags to the entire range.</span><br><span class="line"> *</span><br><span class="line"> * @param content an array of character sequences to apply a style to</span><br><span class="line"> * @param tags the styled span objects to apply to the content</span><br><span class="line"> *        such as android.text.style.StyleSpan</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">private static CharSequence apply(CharSequence[] content, Object... tags) &#123;</span><br><span class="line">    SpannableStringBuilder text = new SpannableStringBuilder();</span><br><span class="line">    openTags(text, tags);</span><br><span class="line">    for (CharSequence item : content) &#123;</span><br><span class="line">        text.append(item);</span><br><span class="line">    &#125;</span><br><span class="line">    closeTags(text, tags);</span><br><span class="line">    return text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Iterates over an array of tags and applies them to the beginning of the specified</span><br><span class="line"> * Spannable object so that future text appended to the text will have the styling</span><br><span class="line"> * applied to it. Do not call this method directly.</span><br><span class="line"> */</span><br><span class="line">private static void openTags(Spannable text, Object[] tags) &#123;</span><br><span class="line">    for (Object tag : tags) &#123;</span><br><span class="line">        text.setSpan(tag, 0, 0, Spannable.SPAN_MARK_MARK);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * &quot;Closes&quot; the specified tags on a Spannable by updating the spans to be</span><br><span class="line"> * endpoint-exclusive so that future text appended to the end will not take</span><br><span class="line"> * on the same styling. Do not call this method directly.</span><br><span class="line"> */</span><br><span class="line">private static void closeTags(Spannable text, Object[] tags) &#123;</span><br><span class="line">    int len = text.length();</span><br><span class="line">    for (Object tag : tags) &#123;</span><br><span class="line">        if (len &gt; 0) &#123;</span><br><span class="line">            text.setSpan(tag, 0, len, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            text.removeSpan(tag);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下 <strong>bold</strong>、<strong>italic</strong> 和 <strong>color</strong> 方法向您展示了如何调用这些帮助程序方法来应用 <a href="https://developer.android.google.cn/reference/android/text/style/package-summary" target="_blank" rel="noopener">android.text.style</a> 包中定义的样式。 您可以创建类似方法来进行其他类型的文本样式设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Returns a CharSequence that applies boldface to the concatenation</span><br><span class="line"> * of the specified CharSequence objects.</span><br><span class="line"> */</span><br><span class="line">public static CharSequence bold(CharSequence... content) &#123;</span><br><span class="line">    return apply(content, new StyleSpan(Typeface.BOLD));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Returns a CharSequence that applies italics to the concatenation</span><br><span class="line"> * of the specified CharSequence objects.</span><br><span class="line"> */</span><br><span class="line">public static CharSequence italic(CharSequence... content) &#123;</span><br><span class="line">    return apply(content, new StyleSpan(Typeface.ITALIC));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Returns a CharSequence that applies a foreground color to the</span><br><span class="line"> * concatenation of the specified CharSequence objects.</span><br><span class="line"> */</span><br><span class="line">public static CharSequence color(int color, CharSequence... content) &#123;</span><br><span class="line">    return apply(content, new ForegroundColorSpan(color));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面这个示例展示了如何将这些方法链接起来，创建出对不同词语应用不同类型样式的字符序列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// Create an italic &quot;hello, &quot; a red &quot;world&quot;,</span><br><span class="line">// and bold the entire sequence.</span><br><span class="line">CharSequence text = bold(italic(res.getString(R.string.hello)),</span><br><span class="line">    color(Color.RED, res.getString(R.string.world)));</span><br></pre></td></tr></table></figure><p>完整代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import android.graphics.Typeface;</span><br><span class="line">import android.text.Spannable;</span><br><span class="line">import android.text.SpannableStringBuilder;</span><br><span class="line">import android.text.Spanned;</span><br><span class="line">import android.text.style.ForegroundColorSpan;</span><br><span class="line">import android.text.style.StyleSpan;</span><br><span class="line"></span><br><span class="line">public class SpannableUtil &#123;</span><br><span class="line">    /**</span><br><span class="line">     * Returns a CharSequence that concatenates the specified array of CharSequence</span><br><span class="line">     * objects and then applies a list of zero or more tags to the entire range.</span><br><span class="line">     *</span><br><span class="line">     * @param content an array of character sequences to apply a style to</span><br><span class="line">     * @param tags    the styled span objects to apply to the content</span><br><span class="line">     *                such as android.text.style.StyleSpan</span><br><span class="line">     */</span><br><span class="line">    private static CharSequence apply(CharSequence[] content, Object... tags) &#123;</span><br><span class="line">        SpannableStringBuilder text = new SpannableStringBuilder();</span><br><span class="line">        openTags(text, tags);</span><br><span class="line">        for (CharSequence item : content) &#123;</span><br><span class="line">            text.append(item);</span><br><span class="line">        &#125;</span><br><span class="line">        closeTags(text, tags);</span><br><span class="line">        return text;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Iterates over an array of tags and applies them to the beginning of the specified</span><br><span class="line">     * Spannable object so that future text appended to the text will have the styling</span><br><span class="line">     * applied to it. Do not call this method directly.</span><br><span class="line">     */</span><br><span class="line">    private static void openTags(Spannable text, Object[] tags) &#123;</span><br><span class="line">        for (Object tag : tags) &#123;</span><br><span class="line">            text.setSpan(tag, 0, 0, Spannable.SPAN_MARK_MARK);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * &quot;Closes&quot; the specified tags on a Spannable by updating the spans to be</span><br><span class="line">     * endpoint-exclusive so that future text appended to the end will not take</span><br><span class="line">     * on the same styling. Do not call this method directly.</span><br><span class="line">     */</span><br><span class="line">    private static void closeTags(Spannable text, Object[] tags) &#123;</span><br><span class="line">        int len = text.length();</span><br><span class="line">        for (Object tag : tags) &#123;</span><br><span class="line">            if (len &gt; 0) &#123;</span><br><span class="line">                text.setSpan(tag, 0, len, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                text.removeSpan(tag);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Returns a CharSequence that applies boldface to the concatenation</span><br><span class="line">     * of the specified CharSequence objects.</span><br><span class="line">     */</span><br><span class="line">    public static CharSequence bold(CharSequence... content) &#123;</span><br><span class="line">        return apply(content, new StyleSpan(Typeface.BOLD));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Returns a CharSequence that applies italics to the concatenation</span><br><span class="line">     * of the specified CharSequence objects.</span><br><span class="line">     */</span><br><span class="line">    public static CharSequence italic(CharSequence... content) &#123;</span><br><span class="line">        return apply(content, new StyleSpan(Typeface.ITALIC));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Returns a CharSequence that applies a foreground color to the</span><br><span class="line">     * concatenation of the specified CharSequence objects.</span><br><span class="line">     */</span><br><span class="line">    public static CharSequence color(int color, CharSequence... content) &#123;</span><br><span class="line">        return apply(content, new ForegroundColorSpan(color));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Returns a CharSequence that applies style to the</span><br><span class="line">     * concatenation of the specified CharSequence objects.</span><br><span class="line">     */</span><br><span class="line">    public static CharSequence applyStyle(Object tag, CharSequence... content) &#123;</span><br><span class="line">        return apply(content, tag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>参考：<a href="https://developer.android.google.cn/guide/topics/resources/string-resource#Plurals" target="_blank" rel="noopener">字符串资源</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://developer.android.google.cn/reference/android/text/Spannable&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Spannable&lt;/a&gt; 是一种文本对象，让您可以使
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android一些资源尺寸数据</title>
    <link href="https://Zane-Inspiration.github.io/2018/08/08/Android%E4%B8%80%E4%BA%9B%E8%B5%84%E6%BA%90%E5%B0%BA%E5%AF%B8%E6%95%B0%E6%8D%AE/"/>
    <id>https://Zane-Inspiration.github.io/2018/08/08/Android一些资源尺寸数据/</id>
    <published>2018-08-08T15:09:45.000Z</published>
    <updated>2018-08-08T15:10:18.147Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-桌面APP启动图标尺寸"><a href="#1-桌面APP启动图标尺寸" class="headerlink" title="1. 桌面APP启动图标尺寸"></a>1. 桌面APP启动图标尺寸</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">48×48 px (48×48 dp @ mdpi)  </span><br><span class="line">64×64 px (42×42 dp @ hdpi)</span><br><span class="line">96×96 px (48×48 dp @ xhdpi)</span><br><span class="line">144×144 px (48×48 dp @ xxhdpi)</span><br><span class="line">192×192 px (48×48 dp @ xxxhdpi)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-桌面APP启动图标尺寸&quot;&gt;&lt;a href=&quot;#1-桌面APP启动图标尺寸&quot; class=&quot;headerlink&quot; title=&quot;1. 桌面APP启动图标尺寸&quot;&gt;&lt;/a&gt;1. 桌面APP启动图标尺寸&lt;/h3&gt;&lt;figure class=&quot;highlight pl
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>google-services插件「No match found」BUG</title>
    <link href="https://Zane-Inspiration.github.io/2018/08/08/google-services%E6%8F%92%E4%BB%B6%E3%80%8CNo-match-found%E3%80%8DBUG/"/>
    <id>https://Zane-Inspiration.github.io/2018/08/08/google-services插件「No-match-found」BUG/</id>
    <published>2018-08-08T14:44:40.000Z</published>
    <updated>2018-08-08T15:03:21.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="当productFlavors的flavor名以大写字母开头时候，Gradle同步时候会出现「No-match-found」BUG，解决方法flavor名以小写字母开头"><a href="#当productFlavors的flavor名以大写字母开头时候，Gradle同步时候会出现「No-match-found」BUG，解决方法flavor名以小写字母开头" class="headerlink" title="- 当productFlavors的flavor名以大写字母开头时候，Gradle同步时候会出现「No match found」BUG，解决方法flavor名以小写字母开头"></a>- 当productFlavors的flavor名以大写字母开头时候，Gradle同步时候会出现「No match found」BUG，解决方法flavor名以小写字母开头</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">flavorDimensions &quot;CHANNEL&quot;</span><br><span class="line">productFlavors &#123;</span><br><span class="line"></span><br><span class="line">    //GooglePlay 应用市场</span><br><span class="line">    //GooglePlay &#123; 这么写报错「No match found」</span><br><span class="line">    googlePlay &#123;</span><br><span class="line">        dimension &quot;CHANNEL&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //华为 AppGallery 应用市场</span><br><span class="line">    // AppGallery &#123; 这么写报错「No match found」</span><br><span class="line">    appGallery &#123;</span><br><span class="line">        dimension &quot;CHANNEL&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="异常日志如下"><a href="#异常日志如下" class="headerlink" title="- 异常日志如下"></a>- 异常日志如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line">org.gradle.api.ProjectConfigurationException: A problem occurred configuring project &apos;:app&apos;.</span><br><span class="line">at org.gradle.configuration.project.LifecycleProjectEvaluator.addConfigurationFailure(LifecycleProjectEvaluator.java:94)</span><br><span class="line">at org.gradle.configuration.project.LifecycleProjectEvaluator.notifyAfterEvaluate(LifecycleProjectEvaluator.java:89)</span><br><span class="line">at org.gradle.configuration.project.LifecycleProjectEvaluator.doConfigure(LifecycleProjectEvaluator.java:70)</span><br><span class="line">at org.gradle.configuration.project.LifecycleProjectEvaluator.access$100(LifecycleProjectEvaluator.java:34)</span><br><span class="line">at org.gradle.configuration.project.LifecycleProjectEvaluator$ConfigureProject.run(LifecycleProjectEvaluator.java:110)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)</span><br><span class="line">at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:50)</span><br><span class="line">at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:666)</span><br><span class="line">at org.gradle.api.internal.project.DefaultProject.evaluate(DefaultProject.java:135)</span><br><span class="line">at org.gradle.execution.TaskPathProjectEvaluator.configure(TaskPathProjectEvaluator.java:35)</span><br><span class="line">at org.gradle.execution.TaskPathProjectEvaluator.configureHierarchy(TaskPathProjectEvaluator.java:62)</span><br><span class="line">at org.gradle.configuration.DefaultBuildConfigurer.configure(DefaultBuildConfigurer.java:38)</span><br><span class="line">at org.gradle.initialization.DefaultGradleLauncher$ConfigureBuild.run(DefaultGradleLauncher.java:249)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)</span><br><span class="line">at org.gradle.initialization.DefaultGradleLauncher.configureBuild(DefaultGradleLauncher.java:167)</span><br><span class="line">at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:126)</span><br><span class="line">at org.gradle.initialization.DefaultGradleLauncher.getConfiguredBuild(DefaultGradleLauncher.java:104)</span><br><span class="line">at org.gradle.internal.invocation.GradleBuildController$2.call(GradleBuildController.java:87)</span><br><span class="line">at org.gradle.internal.invocation.GradleBuildController$2.call(GradleBuildController.java:84)</span><br><span class="line">at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:152)</span><br><span class="line">at org.gradle.internal.invocation.GradleBuildController.doBuild(GradleBuildController.java:100)</span><br><span class="line">at org.gradle.internal.invocation.GradleBuildController.configure(GradleBuildController.java:84)</span><br><span class="line">at org.gradle.tooling.internal.provider.runner.ClientProvidedBuildActionRunner.run(ClientProvidedBuildActionRunner.java:64)</span><br><span class="line">at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)</span><br><span class="line">at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)</span><br><span class="line">at org.gradle.tooling.internal.provider.ValidatingBuildActionRunner.run(ValidatingBuildActionRunner.java:32)</span><br><span class="line">at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$1.run(RunAsBuildOperationBuildActionRunner.java:43)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)</span><br><span class="line">at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)</span><br><span class="line">at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:40)</span><br><span class="line">at org.gradle.tooling.internal.provider.SubscribableBuildActionRunner.run(SubscribableBuildActionRunner.java:51)</span><br><span class="line">at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:47)</span><br><span class="line">at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:30)</span><br><span class="line">at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:39)</span><br><span class="line">at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:25)</span><br><span class="line">at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:80)</span><br><span class="line">at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:53)</span><br><span class="line">at org.gradle.tooling.internal.provider.ServicesSetupBuildActionExecuter.execute(ServicesSetupBuildActionExecuter.java:57)</span><br><span class="line">at org.gradle.tooling.internal.provider.ServicesSetupBuildActionExecuter.execute(ServicesSetupBuildActionExecuter.java:32)</span><br><span class="line">at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:36)</span><br><span class="line">at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:25)</span><br><span class="line">at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:43)</span><br><span class="line">at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:29)</span><br><span class="line">at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:69)</span><br><span class="line">at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:30)</span><br><span class="line">at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:59)</span><br><span class="line">at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:44)</span><br><span class="line">at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:45)</span><br><span class="line">at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:30)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:67)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)</span><br><span class="line">at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:37)</span><br><span class="line">at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)</span><br><span class="line">at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:34)</span><br><span class="line">at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)</span><br><span class="line">at org.gradle.util.Swapper.swap(Swapper.java:38)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)</span><br><span class="line">at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)</span><br><span class="line">at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:62)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)</span><br><span class="line">at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:82)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)</span><br><span class="line">at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)</span><br><span class="line">at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)</span><br><span class="line">at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:295)</span><br><span class="line">at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)</span><br><span class="line">at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)</span><br><span class="line">at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)</span><br><span class="line">at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)</span><br><span class="line">at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)</span><br><span class="line">at java.lang.Thread.run(Thread.java:745)</span><br><span class="line">Caused by: java.lang.IllegalStateException: No match found</span><br><span class="line">at java.util.regex.Matcher.group(Matcher.java:536)</span><br><span class="line">at java_util_regex_MatchResult$group.call(Unknown Source)</span><br><span class="line">at com.google.gms.googleservices.GoogleServicesPlugin.getJsonLocations(GoogleServicesPlugin.groovy:287)</span><br><span class="line">at sun.reflect.GeneratedMethodAccessor611.invoke(Unknown Source)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)</span><br><span class="line">at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)</span><br><span class="line">at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrap.invoke(StaticMetaMethodSite.java:133)</span><br><span class="line">at org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.callStatic(StaticMetaMethodSite.java:102)</span><br><span class="line">at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206)</span><br><span class="line">at com.google.gms.googleservices.GoogleServicesPlugin.handleVariant(GoogleServicesPlugin.groovy:214)</span><br><span class="line">at sun.reflect.GeneratedMethodAccessor610.invoke(Unknown Source)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)</span><br><span class="line">at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)</span><br><span class="line">at org.gradle.internal.metaobject.BeanDynamicObject$MetaClassAdapter.invokeMethod(BeanDynamicObject.java:479)</span><br><span class="line">at org.gradle.internal.metaobject.BeanDynamicObject.tryInvokeMethod(BeanDynamicObject.java:191)</span><br><span class="line">at org.gradle.internal.metaobject.ConfigureDelegate.invokeMethod(ConfigureDelegate.java:78)</span><br><span class="line">at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeOnDelegationObjects(ClosureMetaClass.java:430)</span><br><span class="line">at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:369)</span><br><span class="line">at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)</span><br><span class="line">at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69)</span><br><span class="line">at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:174)</span><br><span class="line">at com.google.gms.googleservices.GoogleServicesPlugin$_setupPlugin_closure5.doCall(GoogleServicesPlugin.groovy:183)</span><br><span class="line">at sun.reflect.GeneratedMethodAccessor609.invoke(Unknown Source)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)</span><br><span class="line">at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)</span><br><span class="line">at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)</span><br><span class="line">at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)</span><br><span class="line">at groovy.lang.Closure.call(Closure.java:414)</span><br><span class="line">at groovy.lang.Closure.call(Closure.java:430)</span><br><span class="line">at org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:71)</span><br><span class="line">at org.gradle.util.ConfigureUtil.configureTarget(ConfigureUtil.java:160)</span><br><span class="line">at org.gradle.util.ConfigureUtil.configure(ConfigureUtil.java:106)</span><br><span class="line">at org.gradle.util.ConfigureUtil$1.execute(ConfigureUtil.java:123)</span><br><span class="line">at org.gradle.internal.ImmutableActionSet$CompositeSet.execute(ImmutableActionSet.java:196)</span><br><span class="line">at org.gradle.internal.MutableActionSet.execute(MutableActionSet.java:35)</span><br><span class="line">at org.gradle.api.internal.DefaultDomainObjectCollection.doAdd(DefaultDomainObjectCollection.java:204)</span><br><span class="line">at org.gradle.api.internal.DefaultDomainObjectCollection.add(DefaultDomainObjectCollection.java:198)</span><br><span class="line">at com.android.build.gradle.AppExtension.addVariant(AppExtension.java:79)</span><br><span class="line">at com.android.build.gradle.internal.ApiObjectFactory.create(ApiObjectFactory.java:132)</span><br><span class="line">at com.android.build.gradle.BasePlugin.lambda$createAndroidTasks$6(BasePlugin.java:760)</span><br><span class="line">at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:81)</span><br><span class="line">at com.android.build.gradle.BasePlugin.createAndroidTasks(BasePlugin.java:746)</span><br><span class="line">at com.android.build.gradle.BasePlugin.lambda$null$4(BasePlugin.java:652)</span><br><span class="line">at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:81)</span><br><span class="line">at com.android.build.gradle.BasePlugin.lambda$createTasks$5(BasePlugin.java:648)</span><br><span class="line">at org.gradle.internal.event.BroadcastDispatch$ActionInvocationHandler.dispatch(BroadcastDispatch.java:91)</span><br><span class="line">at org.gradle.internal.event.BroadcastDispatch$ActionInvocationHandler.dispatch(BroadcastDispatch.java:80)</span><br><span class="line">at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:42)</span><br><span class="line">at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:230)</span><br><span class="line">at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:149)</span><br><span class="line">at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:58)</span><br><span class="line">at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:324)</span><br><span class="line">at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:234)</span><br><span class="line">at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:140)</span><br><span class="line">at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)</span><br><span class="line">at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)</span><br><span class="line">at com.sun.proxy.$Proxy26.afterEvaluate(Unknown Source)</span><br><span class="line">at org.gradle.configuration.project.LifecycleProjectEvaluator.notifyAfterEvaluate(LifecycleProjectEvaluator.java:76)</span><br><span class="line">... 85 more</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;当productFlavors的flavor名以大写字母开头时候，Gradle同步时候会出现「No-match-found」BUG，解决方法flavor名以小写字母开头&quot;&gt;&lt;a href=&quot;#当productFlavors的flavor名以大写字母开头时候，Gra
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
      <category term="Gradle" scheme="https://Zane-Inspiration.github.io/tags/Gradle/"/>
    
      <category term="GooglePlayServices" scheme="https://Zane-Inspiration.github.io/tags/GooglePlayServices/"/>
    
  </entry>
  
  <entry>
    <title>Android O 自动填充框架BUG及修复</title>
    <link href="https://Zane-Inspiration.github.io/2018/07/25/Android-O-%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85%E6%A1%86%E6%9E%B6BUG%E5%8F%8A%E4%BF%AE%E5%A4%8D/"/>
    <id>https://Zane-Inspiration.github.io/2018/07/25/Android-O-自动填充框架BUG及修复/</id>
    <published>2018-07-25T13:34:05.000Z</published>
    <updated>2018-07-25T14:18:41.524Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在平时开发中，给输入框-EditText-设置提示文字的时候，一般通过设置XML中的属性-android-hint-当然也可以通过Java代码设置，但如下样例结合-TextInputLayout-使用的时候，在Android-O-即8-0的系统运行的时候，会出现”java-lang-NullPointerException-Attempt-to-invoke-virtual-method-‘void-android-view-View-getBoundsOnScreen-android-graphics-Rect-’-on-a-null-object-reference”异常。"><a href="#在平时开发中，给输入框-EditText-设置提示文字的时候，一般通过设置XML中的属性-android-hint-当然也可以通过Java代码设置，但如下样例结合-TextInputLayout-使用的时候，在Android-O-即8-0的系统运行的时候，会出现”java-lang-NullPointerException-Attempt-to-invoke-virtual-method-‘void-android-view-View-getBoundsOnScreen-android-graphics-Rect-’-on-a-null-object-reference”异常。" class="headerlink" title="在平时开发中，给输入框 EditText 设置提示文字的时候，一般通过设置XML中的属性 android:hint ,当然也可以通过Java代码设置，但如下样例结合 TextInputLayout 使用的时候，在Android O 即8.0的系统运行的时候，会出现”java.lang.NullPointerException: Attempt to invoke virtual method ‘void android.view.View.getBoundsOnScreen(android.graphics.Rect)’ on a null object reference”异常。"></a>在平时开发中，给输入框 <a href="https://developer.android.google.cn/reference/android/widget/EditText" target="_blank" rel="noopener">EditText</a> 设置提示文字的时候，一般通过设置XML中的属性 <a href="https://developer.android.google.cn/reference/android/widget/TextView.html#attr_android:hint" target="_blank" rel="noopener">android:hint</a> ,当然也可以通过Java代码设置，但如下样例结合 <a href="https://developer.android.google.cn/reference/android/support/design/widget/TextInputLayout" target="_blank" rel="noopener">TextInputLayout</a> 使用的时候，在Android O 即8.0的系统运行的时候，会出现”java.lang.NullPointerException: Attempt to invoke virtual method ‘void android.view.View.getBoundsOnScreen(android.graphics.Rect)’ on a null object reference”异常。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.design.widget.TextInputLayout</span><br><span class="line">       android:layout_width=&quot;match_parent&quot;</span><br><span class="line">       android:layout_height=&quot;wrap_content&quot;&gt;</span><br><span class="line"></span><br><span class="line">       &lt;EditText</span><br><span class="line">           android:layout_width=&quot;match_parent&quot;</span><br><span class="line">           android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">           android:hint=&quot;@string/state&quot;</span><br><span class="line">           android:imeOptions=&quot;actionNext&quot;</span><br><span class="line">           android:inputType=&quot;textCapSentences&quot;</span><br><span class="line">           android:maxLines=&quot;1&quot;</span><br><span class="line">           android:singleLine=&quot;true&quot; /&gt;</span><br><span class="line">   &lt;/android.support.design.widget.TextInputLayout&gt;</span><br></pre></td></tr></table></figure><h3 id="具体异常信息如下，这是已知的系统BUG-Android-O-Preview-3-AssistStructure-View-getBoundsOnScreen-NPE："><a href="#具体异常信息如下，这是已知的系统BUG-Android-O-Preview-3-AssistStructure-View-getBoundsOnScreen-NPE：" class="headerlink" title="具体异常信息如下，这是已知的系统BUG  Android O Preview 3 AssistStructure View.getBoundsOnScreen NPE："></a>具体异常信息如下，这是已知的系统BUG <a href="https://issuetracker.google.com/issues/62834931" target="_blank" rel="noopener"> Android O Preview 3 AssistStructure View.getBoundsOnScreen NPE</a>：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Fatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method &apos;void android.view.View.getBoundsOnScreen(android.graphics.Rect)&apos; on a null object reference</span><br><span class="line">       at android.app.assist.AssistStructure$WindowNode.(AssistStructure.java:484)</span><br><span class="line">       at android.app.assist.AssistStructure.(AssistStructure.java:1908)</span><br><span class="line">       at android.app.ActivityThread.handleRequestAssistContextExtras(ActivityThread.java:3070)</span><br><span class="line">       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1832)</span><br><span class="line">       at android.os.Handler.dispatchMessage(Handler.java:105)</span><br><span class="line">       at android.os.Looper.loop(Looper.java:171)</span><br><span class="line">       at android.app.ActivityThread.main(ActivityThread.java:6688)</span><br><span class="line">       at java.lang.reflect.Method.invoke(Method.java)</span><br><span class="line">       at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:246)</span><br><span class="line">       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:783)</span><br></pre></td></tr></table></figure><h3 id="在参考了多种方案，本人感觉比较可靠的方案是把-android-hint-移动到-TextInputLayout-里设置属性："><a href="#在参考了多种方案，本人感觉比较可靠的方案是把-android-hint-移动到-TextInputLayout-里设置属性：" class="headerlink" title="在参考了多种方案，本人感觉比较可靠的方案是把 android:hint 移动到 TextInputLayout 里设置属性："></a>在参考了多种方案，本人感觉比较可靠的方案是把 <a href="https://developer.android.google.cn/reference/android/widget/TextView.html#attr_android:hint" target="_blank" rel="noopener">android:hint</a> 移动到 <a href="https://developer.android.google.cn/reference/android/support/design/widget/TextInputLayout" target="_blank" rel="noopener">TextInputLayout</a> 里设置属性：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.design.widget.TextInputLayout</span><br><span class="line">       android:layout_width=&quot;match_parent&quot;</span><br><span class="line">       android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:hint=&quot;@string/state&quot; &gt;</span><br><span class="line"></span><br><span class="line">       &lt;EditText</span><br><span class="line">           android:layout_width=&quot;match_parent&quot;</span><br><span class="line">           android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">           android:imeOptions=&quot;actionNext&quot;</span><br><span class="line">           android:inputType=&quot;textCapSentences&quot;</span><br><span class="line">           android:maxLines=&quot;1&quot;</span><br><span class="line">           android:singleLine=&quot;true&quot; /&gt;</span><br><span class="line">   &lt;/android.support.design.widget.TextInputLayout&gt;</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><p><a href="https://stackoverflow.com/questions/45898228/android-attempt-to-invoke-virtual-method-void-android-view-view-getboundsonsc" target="_blank" rel="noopener">Android - Attempt to invoke virtual method ‘void android.view.View.getBoundsOnScreen(android.graphics.Rect)’ on a null object reference</a></p></li><li><p><a href="https://github.com/FlowCrypt/flowcrypt-android/issues/249" target="_blank" rel="noopener">flowcrypt-android/issues/249</a></p></li><li><p><a href="https://github.com/FlowCrypt/flowcrypt-android/commit/18f83cf42c51c2c5f7fbe4ff07744beafd6c69bb" target="_blank" rel="noopener">owcrypt-android/commit/18f83cf42c51c2c5f7fbe4ff07744beafd6c69bb</a></p></li></ul><ul><li><p><a href="https://exceptionshub.com/android-8-0-oreo-crash-on-focusing-textinputedittext.html" target="_blank" rel="noopener">Android 8.0 Oreo crash on focusing TextInputEditText1</a></p></li><li><p><a href="https://stackoverflow.com/questions/45840856/android-8-0-oreo-crash-on-focusing-textinputedittext" target="_blank" rel="noopener">Android 8.0 Oreo crash on focusing TextInputEditText<br>2</a></p></li><li><p><a href="https://stackoverflow.com/questions/45731372/disabling-android-o-auto-fill-service-for-an-application/47021399#47021399" target="_blank" rel="noopener">Disabling Android O auto-fill service for an application</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;在平时开发中，给输入框-EditText-设置提示文字的时候，一般通过设置XML中的属性-android-hint-当然也可以通过Java代码设置，但如下样例结合-TextInputLayout-使用的时候，在Android-O-即8-0的系统运行的时候，会出现”
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android 获取程序运行时进程名的方法</title>
    <link href="https://Zane-Inspiration.github.io/2018/07/18/Android-%E8%8E%B7%E5%8F%96%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%97%B6%E8%BF%9B%E7%A8%8B%E5%90%8D%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://Zane-Inspiration.github.io/2018/07/18/Android-获取程序运行时进程名的方法/</id>
    <published>2018-07-18T15:03:51.000Z</published>
    <updated>2018-07-18T15:29:43.022Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><h5 id="在Android应用中，可以把四大组件（Activity-Service-ContentProvider-BroadcastReceiver）放在不同进程中运行，所以应用的的一些基础配置在初始化的时候，需要考虑不同进程的问题。"><a href="#在Android应用中，可以把四大组件（Activity-Service-ContentProvider-BroadcastReceiver）放在不同进程中运行，所以应用的的一些基础配置在初始化的时候，需要考虑不同进程的问题。" class="headerlink" title="在Android应用中，可以把四大组件（Activity,Service,ContentProvider,BroadcastReceiver）放在不同进程中运行，所以应用的的一些基础配置在初始化的时候，需要考虑不同进程的问题。"></a>在Android应用中，可以把四大组件（Activity,Service,ContentProvider,BroadcastReceiver）放在不同进程中运行，所以应用的的一些基础配置在初始化的时候，需要考虑不同进程的问题。</h5><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">//判断当前运行进程是否是主进程</span><br><span class="line">public static boolean isMainProcess(Application app) &#123;</span><br><span class="line">    //优先通过反射取进程名</span><br><span class="line">    String processName = getProcessNameByReflection(app);</span><br><span class="line"></span><br><span class="line">    if (TextUtils.isEmpty(processName)) &#123;</span><br><span class="line">        processName = getProcessNameByCmdline();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (TextUtils.isEmpty(processName)) &#123;</span><br><span class="line">        processName = getProcessNameByAM(app);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return app.getPackageName().equals(processName);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static String getProcessNameByAM(Context context) &#123;</span><br><span class="line">    final int pid = android.os.Process.myPid();</span><br><span class="line">    final ActivityManager manager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);</span><br><span class="line">    String processName = null;</span><br><span class="line">    if (manager != null) &#123;</span><br><span class="line">        final List&lt;ActivityManager.RunningAppProcessInfo&gt; infoList = manager.getRunningAppProcesses();</span><br><span class="line">        if (infoList != null) &#123;</span><br><span class="line">            for (ActivityManager.RunningAppProcessInfo info : infoList) &#123;</span><br><span class="line">                if (info.pid == pid) &#123;</span><br><span class="line">                    processName = info.processName;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return processName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static String getProcessNameByCmdline() &#123;</span><br><span class="line">    String processName = null;</span><br><span class="line">    BufferedReader cmdlineReader = null;</span><br><span class="line">    try &#123;</span><br><span class="line">        cmdlineReader = new BufferedReader(new InputStreamReader(</span><br><span class="line">                new FileInputStream(&quot;/proc/&quot; + android.os.Process.myPid() + &quot;/cmdline&quot;),</span><br><span class="line">                &quot;iso-8859-1&quot;));</span><br><span class="line">        int c;</span><br><span class="line">        StringBuilder sb = new StringBuilder();</span><br><span class="line">        while ((c = cmdlineReader.read()) &gt; 0) &#123;</span><br><span class="line">            sb.append((char) c);</span><br><span class="line">        &#125;</span><br><span class="line">        processName = sb.toString();</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        Timber.e(e);</span><br><span class="line">    &#125; finally &#123;</span><br><span class="line">        if (cmdlineReader != null) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                cmdlineReader.close();</span><br><span class="line">            &#125; catch (IOException ignored) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return processName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static String getProcessNameByReflection(Application app) &#123;</span><br><span class="line">    String processName = null;</span><br><span class="line">    try &#123;</span><br><span class="line">        Field loadedApkField = app.getClass().getField(&quot;mLoadedApk&quot;);</span><br><span class="line">        loadedApkField.setAccessible(true);</span><br><span class="line">        Object loadedApk = loadedApkField.get(app);</span><br><span class="line"></span><br><span class="line">        Field activityThreadField = loadedApk.getClass().getDeclaredField(&quot;mActivityThread&quot;);</span><br><span class="line">        activityThreadField.setAccessible(true);</span><br><span class="line">        Object activityThread = activityThreadField.get(loadedApk);</span><br><span class="line"></span><br><span class="line">        Method getProcessName = activityThread.getClass().getDeclaredMethod(&quot;getProcessName&quot;);</span><br><span class="line">        processName = (String) getProcessName.invoke(activityThread);</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        Timber.e(e);</span><br><span class="line">    &#125;</span><br><span class="line">    return processName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><ul><li><a href="//https://stackoverflow.com/questions/19631894/is-there-a-way-to-get-current-process-name-in-android">is-there-a-way-to-get-current-process-name-in-android</a></li><li><a href="http://androidxref.com/6.0.1_r10/xref/frameworks/base/core/java/android/app/ActivityThread.java#437" target="_blank" rel="noopener">ActivityThread</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;h5 id=&quot;在Android应用中，可以把四大组件（Activity-Service-ContentProvider-BroadcastRec
      
    
    </summary>
    
    
      <category term="Android" scheme="https://Zane-Inspiration.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>工作中常用的git命令</title>
    <link href="https://Zane-Inspiration.github.io/2018/07/08/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84git%E5%91%BD%E4%BB%A4/"/>
    <id>https://Zane-Inspiration.github.io/2018/07/08/工作中常用的git命令/</id>
    <published>2018-07-08T08:14:20.000Z</published>
    <updated>2018-08-08T15:43:33.292Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h2 id="初始化仓库（init）"><a href="#初始化仓库（init）" class="headerlink" title="初始化仓库（init）"></a>初始化仓库（<a href="https://git.github.io/htmldocs/git-init.html" target="_blank" rel="noopener">init</a>）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init [-q | --quiet] [--bare] [--template=&lt;template_directory&gt;]</span><br><span class="line">          [--separate-git-dir &lt;git dir&gt;]</span><br><span class="line">          [--shared[=&lt;permissions&gt;]] [directory]</span><br></pre></td></tr></table></figure></li></ul><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd /path/to/my/codebase</span><br><span class="line">$ git init      &lt;1&gt;</span><br><span class="line">$ git add .     &lt;2&gt;</span><br><span class="line">$ git commit    &lt;3&gt;</span><br></pre></td></tr></table></figure><h5 id="1-Create-a-path-to-my-codebase-git-directory"><a href="#1-Create-a-path-to-my-codebase-git-directory" class="headerlink" title="1. Create a /path/to/my/codebase/.git directory."></a>1. Create a /path/to/my/codebase/.git directory.</h5><h5 id="2-Add-all-existing-files-to-the-index"><a href="#2-Add-all-existing-files-to-the-index" class="headerlink" title="2. Add all existing files to the index."></a>2. Add all existing files to the index.</h5><h5 id="3-Record-the-pristine-state-as-the-first-commit-in-the-history"><a href="#3-Record-the-pristine-state-as-the-first-commit-in-the-history" class="headerlink" title="3. Record the pristine state as the first commit in the history."></a>3. Record the pristine state as the first commit in the history.</h5><ul><li><h2 id="推送（push）"><a href="#推送（push）" class="headerlink" title="推送（push）"></a>推送（<a href="https://git.github.io/htmldocs/git-push.html" target="_blank" rel="noopener">push</a>）</h2></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git push [--all | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=&lt;git-receive-pack&gt;]</span><br><span class="line">           [--repo=&lt;repository&gt;] [-f | --force] [-d | --delete] [--prune] [-v | --verbose]</span><br><span class="line">           [-u | --set-upstream] [-o &lt;string&gt; | --push-option=&lt;string&gt;]</span><br><span class="line">           [--[no-]signed|--signed=(true|false|if-asked)]</span><br><span class="line">           [--force-with-lease[=&lt;refname&gt;[:&lt;expect&gt;]]]</span><br><span class="line">           [--no-verify] [&lt;repository&gt; [&lt;refspec&gt;…]]</span><br></pre></td></tr></table></figure><h3 id="1-推送本地仓库分支到对应远程仓库分支"><a href="#1-推送本地仓库分支到对应远程仓库分支" class="headerlink" title="1. 推送本地仓库分支到对应远程仓库分支"></a>1. 推送本地仓库分支到对应远程仓库分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="2-推送本地库分支到远程库对应分支-包含新打的标签"><a href="#2-推送本地库分支到远程库对应分支-包含新打的标签" class="headerlink" title="2. 推送本地库分支到远程库对应分支(包含新打的标签)"></a>2. 推送本地库分支到远程库对应分支(包含新打的标签)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --tags origin master</span><br></pre></td></tr></table></figure><ul><li><h2 id="分支（-branch）"><a href="#分支（-branch）" class="headerlink" title="分支（ branch）"></a>分支（ <a href="https://git.github.io/htmldocs/git-branch.html" target="_blank" rel="noopener">branch</a>）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git branch [--color[=&lt;when&gt;] | --no-color] [-r | -a]</span><br><span class="line">        [--list] [-v [--abbrev=&lt;length&gt; | --no-abbrev]]</span><br><span class="line">        [--column[=&lt;options&gt;] | --no-column] [--sort=&lt;key&gt;]</span><br><span class="line">        [(--merged | --no-merged) [&lt;commit&gt;]]</span><br><span class="line">        [--contains [&lt;commit]] [--no-contains [&lt;commit&gt;]]</span><br><span class="line">        [--points-at &lt;object&gt;] [--format=&lt;format&gt;] [&lt;pattern&gt;…]</span><br><span class="line">git branch [--track | --no-track] [-l] [-f] &lt;branchname&gt; [&lt;start-point&gt;]</span><br><span class="line">git branch (--set-upstream-to=&lt;upstream&gt; | -u &lt;upstream&gt;) [&lt;branchname&gt;]</span><br><span class="line">git branch --unset-upstream [&lt;branchname&gt;]</span><br><span class="line">git branch (-m | -M) [&lt;oldbranch&gt;] &lt;newbranch&gt;</span><br><span class="line">git branch (-c | -C) [&lt;oldbranch&gt;] &lt;newbranch&gt;</span><br><span class="line">git branch (-d | -D) [-r] &lt;branchname&gt;…</span><br><span class="line">git branch --edit-description [&lt;branchname&gt;] &lt;commit&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-重命名本地分支"><a href="#1-重命名本地分支" class="headerlink" title="1. 重命名本地分支"></a>1. 重命名本地分支</h3><h5 id="命令格式："><a href="#命令格式：" class="headerlink" title="命令格式："></a>命令格式：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch (-m | -M) [&lt;oldbranch&gt;] &lt;newbranch&gt;</span><br></pre></td></tr></table></figure><h5 id="样例："><a href="#样例：" class="headerlink" title="样例："></a>样例：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m develop newdevelop</span><br></pre></td></tr></table></figure><ul><li><h3 id="储藏（stash）"><a href="#储藏（stash）" class="headerlink" title="储藏（stash）"></a>储藏（<a href="https://git.github.io/htmldocs/git-stash.html" target="_blank" rel="noopener">stash</a>）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git stash list [&lt;options&gt;]</span><br><span class="line">git stash show [&lt;stash&gt;]</span><br><span class="line">git stash drop [-q|--quiet] [&lt;stash&gt;]</span><br><span class="line">git stash ( pop | apply ) [--index] [-q|--quiet] [&lt;stash&gt;]</span><br><span class="line">git stash branch &lt;branchname&gt; [&lt;stash&gt;]</span><br><span class="line">git stash [push [-p|--patch] [-k|--[no-]keep-index] [-q|--quiet]</span><br><span class="line">             [-u|--include-untracked] [-a|--all] [-m|--message &lt;message&gt;]</span><br><span class="line">             [--] [&lt;pathspec&gt;…]]</span><br><span class="line">git stash clear</span><br><span class="line">git stash create [&lt;message&gt;]</span><br><span class="line">git stash store [-m|--message &lt;message&gt;] [-q|--quiet] &lt;commit&gt;</span><br></pre></td></tr></table></figure></li><li><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><h5 id="1-Github文档"><a href="#1-Github文档" class="headerlink" title="1. Github文档"></a>1. <a href="https://git.github.io/htmldocs/git.html" target="_blank" rel="noopener">Github文档</a></h5><h5 id="2-官方文档"><a href="#2-官方文档" class="headerlink" title="2. 官方文档"></a>2. <a href="https://git-scm.com/book/zh" target="_blank" rel="noopener">官方文档</a></h5></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;初始化仓库（init）&quot;&gt;&lt;a href=&quot;#初始化仓库（init）&quot; class=&quot;headerlink&quot; title=&quot;初始化仓库（init）&quot;&gt;&lt;/a&gt;初始化仓库（&lt;a href=&quot;https://git.github.io/htmldoc
      
    
    </summary>
    
    
      <category term="git" scheme="https://Zane-Inspiration.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://Zane-Inspiration.github.io/2018/07/08/hello-world/"/>
    <id>https://Zane-Inspiration.github.io/2018/07/08/hello-world/</id>
    <published>2018-07-08T02:55:06.036Z</published>
    <updated>2018-07-08T08:04:20.558Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
